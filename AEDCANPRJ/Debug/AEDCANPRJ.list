
AEDCANPRJ.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000e7c  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000080  08001028  08001028  00011028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080010a8  080010a8  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  080010a8  080010a8  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080010a8  080010a8  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080010a8  080010a8  000110a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080010ac  080010ac  000110ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  080010b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002006c  2**0
                  CONTENTS
 10 .bss          000000dc  2000006c  2000006c  0002006c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000148  20000148  0002006c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 13 .comment      00000050  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000193  00000000  00000000  000200ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000000cd  00000000  00000000  0002027f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000048  00000000  00000000  00020350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 00000030  00000000  00000000  00020398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00001721  00000000  00000000  000203c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000573  00000000  00000000  00021ae9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00005bf2  00000000  00000000  0002205c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000960  00000000  00000000  00027c50  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	2000006c 	.word	0x2000006c
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08001010 	.word	0x08001010

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000070 	.word	0x20000070
 80001e8:	08001010 	.word	0x08001010

080001ec <strlen>:
 80001ec:	4603      	mov	r3, r0
 80001ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f2:	2a00      	cmp	r2, #0
 80001f4:	d1fb      	bne.n	80001ee <strlen+0x2>
 80001f6:	1a18      	subs	r0, r3, r0
 80001f8:	3801      	subs	r0, #1
 80001fa:	4770      	bx	lr

080001fc <main>:
 80001fc:	b580      	push	{r7, lr}
 80001fe:	b08e      	sub	sp, #56	; 0x38
 8000200:	af00      	add	r7, sp, #0
 8000202:	f000 fb65 	bl	80008d0 <initialise_monitor_handles>
 8000206:	237b      	movs	r3, #123	; 0x7b
 8000208:	603b      	str	r3, [r7, #0]
 800020a:	4b4f      	ldr	r3, [pc, #316]	; (8000348 <main+0x14c>)
 800020c:	637b      	str	r3, [r7, #52]	; 0x34
 800020e:	4b4f      	ldr	r3, [pc, #316]	; (800034c <main+0x150>)
 8000210:	633b      	str	r3, [r7, #48]	; 0x30
 8000212:	4b4f      	ldr	r3, [pc, #316]	; (8000350 <main+0x154>)
 8000214:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000216:	4b4f      	ldr	r3, [pc, #316]	; (8000354 <main+0x158>)
 8000218:	62bb      	str	r3, [r7, #40]	; 0x28
 800021a:	4b4f      	ldr	r3, [pc, #316]	; (8000358 <main+0x15c>)
 800021c:	627b      	str	r3, [r7, #36]	; 0x24
 800021e:	4b4f      	ldr	r3, [pc, #316]	; (800035c <main+0x160>)
 8000220:	623b      	str	r3, [r7, #32]
 8000222:	4b4f      	ldr	r3, [pc, #316]	; (8000360 <main+0x164>)
 8000224:	61fb      	str	r3, [r7, #28]
 8000226:	4b4f      	ldr	r3, [pc, #316]	; (8000364 <main+0x168>)
 8000228:	61bb      	str	r3, [r7, #24]
 800022a:	4b4f      	ldr	r3, [pc, #316]	; (8000368 <main+0x16c>)
 800022c:	617b      	str	r3, [r7, #20]
 800022e:	4b4f      	ldr	r3, [pc, #316]	; (800036c <main+0x170>)
 8000230:	613b      	str	r3, [r7, #16]
 8000232:	4b4f      	ldr	r3, [pc, #316]	; (8000370 <main+0x174>)
 8000234:	60fb      	str	r3, [r7, #12]
 8000236:	4b4f      	ldr	r3, [pc, #316]	; (8000374 <main+0x178>)
 8000238:	60bb      	str	r3, [r7, #8]
 800023a:	4b4f      	ldr	r3, [pc, #316]	; (8000378 <main+0x17c>)
 800023c:	607b      	str	r3, [r7, #4]
 800023e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8000240:	6813      	ldr	r3, [r2, #0]
 8000242:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000246:	6013      	str	r3, [r2, #0]
 8000248:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800024a:	6813      	ldr	r3, [r2, #0]
 800024c:	f043 0302 	orr.w	r3, r3, #2
 8000250:	6013      	str	r3, [r2, #0]
 8000252:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8000254:	6813      	ldr	r3, [r2, #0]
 8000256:	2102      	movs	r1, #2
 8000258:	f361 4311 	bfi	r3, r1, #16, #2
 800025c:	6013      	str	r3, [r2, #0]
 800025e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8000260:	6813      	ldr	r3, [r2, #0]
 8000262:	2102      	movs	r1, #2
 8000264:	f361 4393 	bfi	r3, r1, #18, #2
 8000268:	6013      	str	r3, [r2, #0]
 800026a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800026c:	6813      	ldr	r3, [r2, #0]
 800026e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000272:	6013      	str	r3, [r2, #0]
 8000274:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8000276:	6813      	ldr	r3, [r2, #0]
 8000278:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800027c:	6013      	str	r3, [r2, #0]
 800027e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000280:	6813      	ldr	r3, [r2, #0]
 8000282:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000286:	6013      	str	r3, [r2, #0]
 8000288:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800028a:	6813      	ldr	r3, [r2, #0]
 800028c:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 8000290:	6013      	str	r3, [r2, #0]
 8000292:	6a3a      	ldr	r2, [r7, #32]
 8000294:	6813      	ldr	r3, [r2, #0]
 8000296:	2101      	movs	r1, #1
 8000298:	f361 4311 	bfi	r3, r1, #16, #2
 800029c:	6013      	str	r3, [r2, #0]
 800029e:	6a3a      	ldr	r2, [r7, #32]
 80002a0:	6813      	ldr	r3, [r2, #0]
 80002a2:	2101      	movs	r1, #1
 80002a4:	f361 4393 	bfi	r3, r1, #18, #2
 80002a8:	6013      	str	r3, [r2, #0]
 80002aa:	69fa      	ldr	r2, [r7, #28]
 80002ac:	6813      	ldr	r3, [r2, #0]
 80002ae:	2104      	movs	r1, #4
 80002b0:	f361 1307 	bfi	r3, r1, #4, #4
 80002b4:	6013      	str	r3, [r2, #0]
 80002b6:	69fa      	ldr	r2, [r7, #28]
 80002b8:	6813      	ldr	r3, [r2, #0]
 80002ba:	2104      	movs	r1, #4
 80002bc:	f361 230b 	bfi	r3, r1, #8, #4
 80002c0:	6013      	str	r3, [r2, #0]
 80002c2:	69ba      	ldr	r2, [r7, #24]
 80002c4:	8813      	ldrh	r3, [r2, #0]
 80002c6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80002ca:	8013      	strh	r3, [r2, #0]
 80002cc:	69ba      	ldr	r2, [r7, #24]
 80002ce:	8813      	ldrh	r3, [r2, #0]
 80002d0:	f36f 33cf 	bfc	r3, #15, #1
 80002d4:	8013      	strh	r3, [r2, #0]
 80002d6:	697a      	ldr	r2, [r7, #20]
 80002d8:	8813      	ldrh	r3, [r2, #0]
 80002da:	212d      	movs	r1, #45	; 0x2d
 80002dc:	f361 0305 	bfi	r3, r1, #0, #6
 80002e0:	8013      	strh	r3, [r2, #0]
 80002e2:	693a      	ldr	r2, [r7, #16]
 80002e4:	8813      	ldrh	r3, [r2, #0]
 80002e6:	21e1      	movs	r1, #225	; 0xe1
 80002e8:	f361 030b 	bfi	r3, r1, #0, #12
 80002ec:	8013      	strh	r3, [r2, #0]
 80002ee:	68fa      	ldr	r2, [r7, #12]
 80002f0:	8813      	ldrh	r3, [r2, #0]
 80002f2:	212e      	movs	r1, #46	; 0x2e
 80002f4:	f361 0305 	bfi	r3, r1, #0, #6
 80002f8:	8013      	strh	r3, [r2, #0]
 80002fa:	69ba      	ldr	r2, [r7, #24]
 80002fc:	8813      	ldrh	r3, [r2, #0]
 80002fe:	f043 0301 	orr.w	r3, r3, #1
 8000302:	8013      	strh	r3, [r2, #0]
 8000304:	69ba      	ldr	r2, [r7, #24]
 8000306:	8813      	ldrh	r3, [r2, #0]
 8000308:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800030c:	8013      	strh	r3, [r2, #0]
 800030e:	69ba      	ldr	r2, [r7, #24]
 8000310:	8813      	ldrh	r3, [r2, #0]
 8000312:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000316:	8013      	strh	r3, [r2, #0]
 8000318:	bf00      	nop
 800031a:	68bb      	ldr	r3, [r7, #8]
 800031c:	881b      	ldrh	r3, [r3, #0]
 800031e:	f3c3 2300 	ubfx	r3, r3, #8, #1
 8000322:	b2db      	uxtb	r3, r3
 8000324:	2b00      	cmp	r3, #0
 8000326:	d0f8      	beq.n	800031a <main+0x11e>
 8000328:	683b      	ldr	r3, [r7, #0]
 800032a:	b2d9      	uxtb	r1, r3
 800032c:	687a      	ldr	r2, [r7, #4]
 800032e:	8813      	ldrh	r3, [r2, #0]
 8000330:	f361 0307 	bfi	r3, r1, #0, #8
 8000334:	8013      	strh	r3, [r2, #0]
 8000336:	bf00      	nop
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	881b      	ldrh	r3, [r3, #0]
 800033c:	f3c3 3340 	ubfx	r3, r3, #13, #1
 8000340:	b2db      	uxtb	r3, r3
 8000342:	2b00      	cmp	r3, #0
 8000344:	d0f8      	beq.n	8000338 <main+0x13c>
 8000346:	e7fe      	b.n	8000346 <main+0x14a>
 8000348:	40023830 	.word	0x40023830
 800034c:	40023840 	.word	0x40023840
 8000350:	40020400 	.word	0x40020400
 8000354:	40020404 	.word	0x40020404
 8000358:	40020420 	.word	0x40020420
 800035c:	40020430 	.word	0x40020430
 8000360:	40020424 	.word	0x40020424
 8000364:	40005400 	.word	0x40005400
 8000368:	40005404 	.word	0x40005404
 800036c:	4000541c 	.word	0x4000541c
 8000370:	40005420 	.word	0x40005420
 8000374:	40005410 	.word	0x40005410
 8000378:	40005414 	.word	0x40005414

0800037c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800037c:	b580      	push	{r7, lr}
 800037e:	b086      	sub	sp, #24
 8000380:	af00      	add	r7, sp, #0
 8000382:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000384:	4a14      	ldr	r2, [pc, #80]	; (80003d8 <_sbrk+0x5c>)
 8000386:	4b15      	ldr	r3, [pc, #84]	; (80003dc <_sbrk+0x60>)
 8000388:	1ad3      	subs	r3, r2, r3
 800038a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800038c:	697b      	ldr	r3, [r7, #20]
 800038e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000390:	4b13      	ldr	r3, [pc, #76]	; (80003e0 <_sbrk+0x64>)
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	2b00      	cmp	r3, #0
 8000396:	d102      	bne.n	800039e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000398:	4b11      	ldr	r3, [pc, #68]	; (80003e0 <_sbrk+0x64>)
 800039a:	4a12      	ldr	r2, [pc, #72]	; (80003e4 <_sbrk+0x68>)
 800039c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800039e:	4b10      	ldr	r3, [pc, #64]	; (80003e0 <_sbrk+0x64>)
 80003a0:	681a      	ldr	r2, [r3, #0]
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4413      	add	r3, r2
 80003a6:	693a      	ldr	r2, [r7, #16]
 80003a8:	429a      	cmp	r2, r3
 80003aa:	d207      	bcs.n	80003bc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003ac:	f000 f846 	bl	800043c <__errno>
 80003b0:	4603      	mov	r3, r0
 80003b2:	220c      	movs	r2, #12
 80003b4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003b6:	f04f 33ff 	mov.w	r3, #4294967295
 80003ba:	e009      	b.n	80003d0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003bc:	4b08      	ldr	r3, [pc, #32]	; (80003e0 <_sbrk+0x64>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003c2:	4b07      	ldr	r3, [pc, #28]	; (80003e0 <_sbrk+0x64>)
 80003c4:	681a      	ldr	r2, [r3, #0]
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	4413      	add	r3, r2
 80003ca:	4a05      	ldr	r2, [pc, #20]	; (80003e0 <_sbrk+0x64>)
 80003cc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003ce:	68fb      	ldr	r3, [r7, #12]
}
 80003d0:	4618      	mov	r0, r3
 80003d2:	3718      	adds	r7, #24
 80003d4:	46bd      	mov	sp, r7
 80003d6:	bd80      	pop	{r7, pc}
 80003d8:	20030000 	.word	0x20030000
 80003dc:	00000400 	.word	0x00000400
 80003e0:	20000088 	.word	0x20000088
 80003e4:	20000148 	.word	0x20000148

080003e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003e8:	480d      	ldr	r0, [pc, #52]	; (8000420 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003ec:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003f0:	480c      	ldr	r0, [pc, #48]	; (8000424 <LoopForever+0x6>)
  ldr r1, =_edata
 80003f2:	490d      	ldr	r1, [pc, #52]	; (8000428 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003f4:	4a0d      	ldr	r2, [pc, #52]	; (800042c <LoopForever+0xe>)
  movs r3, #0
 80003f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003f8:	e002      	b.n	8000400 <LoopCopyDataInit>

080003fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003fe:	3304      	adds	r3, #4

08000400 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000400:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000402:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000404:	d3f9      	bcc.n	80003fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000406:	4a0a      	ldr	r2, [pc, #40]	; (8000430 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000408:	4c0a      	ldr	r4, [pc, #40]	; (8000434 <LoopForever+0x16>)
  movs r3, #0
 800040a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800040c:	e001      	b.n	8000412 <LoopFillZerobss>

0800040e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800040e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000410:	3204      	adds	r2, #4

08000412 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000412:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000414:	d3fb      	bcc.n	800040e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000416:	f000 f817 	bl	8000448 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800041a:	f7ff feef 	bl	80001fc <main>

0800041e <LoopForever>:

LoopForever:
  b LoopForever
 800041e:	e7fe      	b.n	800041e <LoopForever>
  ldr   r0, =_estack
 8000420:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000424:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000428:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 800042c:	080010b0 	.word	0x080010b0
  ldr r2, =_sbss
 8000430:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 8000434:	20000148 	.word	0x20000148

08000438 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000438:	e7fe      	b.n	8000438 <ADC_IRQHandler>
	...

0800043c <__errno>:
 800043c:	4b01      	ldr	r3, [pc, #4]	; (8000444 <__errno+0x8>)
 800043e:	6818      	ldr	r0, [r3, #0]
 8000440:	4770      	bx	lr
 8000442:	bf00      	nop
 8000444:	20000000 	.word	0x20000000

08000448 <__libc_init_array>:
 8000448:	b570      	push	{r4, r5, r6, lr}
 800044a:	4d0d      	ldr	r5, [pc, #52]	; (8000480 <__libc_init_array+0x38>)
 800044c:	4c0d      	ldr	r4, [pc, #52]	; (8000484 <__libc_init_array+0x3c>)
 800044e:	1b64      	subs	r4, r4, r5
 8000450:	10a4      	asrs	r4, r4, #2
 8000452:	2600      	movs	r6, #0
 8000454:	42a6      	cmp	r6, r4
 8000456:	d109      	bne.n	800046c <__libc_init_array+0x24>
 8000458:	4d0b      	ldr	r5, [pc, #44]	; (8000488 <__libc_init_array+0x40>)
 800045a:	4c0c      	ldr	r4, [pc, #48]	; (800048c <__libc_init_array+0x44>)
 800045c:	f000 fdd8 	bl	8001010 <_init>
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	10a4      	asrs	r4, r4, #2
 8000464:	2600      	movs	r6, #0
 8000466:	42a6      	cmp	r6, r4
 8000468:	d105      	bne.n	8000476 <__libc_init_array+0x2e>
 800046a:	bd70      	pop	{r4, r5, r6, pc}
 800046c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000470:	4798      	blx	r3
 8000472:	3601      	adds	r6, #1
 8000474:	e7ee      	b.n	8000454 <__libc_init_array+0xc>
 8000476:	f855 3b04 	ldr.w	r3, [r5], #4
 800047a:	4798      	blx	r3
 800047c:	3601      	adds	r6, #1
 800047e:	e7f2      	b.n	8000466 <__libc_init_array+0x1e>
 8000480:	080010a8 	.word	0x080010a8
 8000484:	080010a8 	.word	0x080010a8
 8000488:	080010a8 	.word	0x080010a8
 800048c:	080010ac 	.word	0x080010ac

08000490 <memset>:
 8000490:	4402      	add	r2, r0
 8000492:	4603      	mov	r3, r0
 8000494:	4293      	cmp	r3, r2
 8000496:	d100      	bne.n	800049a <memset+0xa>
 8000498:	4770      	bx	lr
 800049a:	f803 1b01 	strb.w	r1, [r3], #1
 800049e:	e7f9      	b.n	8000494 <memset+0x4>

080004a0 <findslot>:
 80004a0:	4b0a      	ldr	r3, [pc, #40]	; (80004cc <findslot+0x2c>)
 80004a2:	b510      	push	{r4, lr}
 80004a4:	4604      	mov	r4, r0
 80004a6:	6818      	ldr	r0, [r3, #0]
 80004a8:	b118      	cbz	r0, 80004b2 <findslot+0x12>
 80004aa:	6983      	ldr	r3, [r0, #24]
 80004ac:	b90b      	cbnz	r3, 80004b2 <findslot+0x12>
 80004ae:	f000 fac7 	bl	8000a40 <__sinit>
 80004b2:	2c13      	cmp	r4, #19
 80004b4:	d807      	bhi.n	80004c6 <findslot+0x26>
 80004b6:	4806      	ldr	r0, [pc, #24]	; (80004d0 <findslot+0x30>)
 80004b8:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 80004bc:	3201      	adds	r2, #1
 80004be:	d002      	beq.n	80004c6 <findslot+0x26>
 80004c0:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 80004c4:	bd10      	pop	{r4, pc}
 80004c6:	2000      	movs	r0, #0
 80004c8:	e7fc      	b.n	80004c4 <findslot+0x24>
 80004ca:	bf00      	nop
 80004cc:	20000000 	.word	0x20000000
 80004d0:	20000098 	.word	0x20000098

080004d4 <error>:
 80004d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004d6:	4604      	mov	r4, r0
 80004d8:	f7ff ffb0 	bl	800043c <__errno>
 80004dc:	2613      	movs	r6, #19
 80004de:	4605      	mov	r5, r0
 80004e0:	2700      	movs	r7, #0
 80004e2:	4630      	mov	r0, r6
 80004e4:	4639      	mov	r1, r7
 80004e6:	beab      	bkpt	0x00ab
 80004e8:	4606      	mov	r6, r0
 80004ea:	602e      	str	r6, [r5, #0]
 80004ec:	4620      	mov	r0, r4
 80004ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080004f0 <checkerror>:
 80004f0:	1c43      	adds	r3, r0, #1
 80004f2:	d101      	bne.n	80004f8 <checkerror+0x8>
 80004f4:	f7ff bfee 	b.w	80004d4 <error>
 80004f8:	4770      	bx	lr

080004fa <_swiread>:
 80004fa:	b530      	push	{r4, r5, lr}
 80004fc:	b085      	sub	sp, #20
 80004fe:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000502:	9203      	str	r2, [sp, #12]
 8000504:	2406      	movs	r4, #6
 8000506:	ad01      	add	r5, sp, #4
 8000508:	4620      	mov	r0, r4
 800050a:	4629      	mov	r1, r5
 800050c:	beab      	bkpt	0x00ab
 800050e:	4604      	mov	r4, r0
 8000510:	4620      	mov	r0, r4
 8000512:	f7ff ffed 	bl	80004f0 <checkerror>
 8000516:	b005      	add	sp, #20
 8000518:	bd30      	pop	{r4, r5, pc}

0800051a <_read>:
 800051a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800051c:	4615      	mov	r5, r2
 800051e:	9101      	str	r1, [sp, #4]
 8000520:	f7ff ffbe 	bl	80004a0 <findslot>
 8000524:	9901      	ldr	r1, [sp, #4]
 8000526:	4604      	mov	r4, r0
 8000528:	b938      	cbnz	r0, 800053a <_read+0x20>
 800052a:	f7ff ff87 	bl	800043c <__errno>
 800052e:	2309      	movs	r3, #9
 8000530:	6003      	str	r3, [r0, #0]
 8000532:	f04f 30ff 	mov.w	r0, #4294967295
 8000536:	b003      	add	sp, #12
 8000538:	bd30      	pop	{r4, r5, pc}
 800053a:	6800      	ldr	r0, [r0, #0]
 800053c:	462a      	mov	r2, r5
 800053e:	f7ff ffdc 	bl	80004fa <_swiread>
 8000542:	1c43      	adds	r3, r0, #1
 8000544:	d0f7      	beq.n	8000536 <_read+0x1c>
 8000546:	6863      	ldr	r3, [r4, #4]
 8000548:	1a2a      	subs	r2, r5, r0
 800054a:	4413      	add	r3, r2
 800054c:	6063      	str	r3, [r4, #4]
 800054e:	4610      	mov	r0, r2
 8000550:	e7f1      	b.n	8000536 <_read+0x1c>

08000552 <_swilseek>:
 8000552:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000554:	460c      	mov	r4, r1
 8000556:	4616      	mov	r6, r2
 8000558:	f7ff ffa2 	bl	80004a0 <findslot>
 800055c:	4605      	mov	r5, r0
 800055e:	b940      	cbnz	r0, 8000572 <_swilseek+0x20>
 8000560:	f7ff ff6c 	bl	800043c <__errno>
 8000564:	2309      	movs	r3, #9
 8000566:	6003      	str	r3, [r0, #0]
 8000568:	f04f 34ff 	mov.w	r4, #4294967295
 800056c:	4620      	mov	r0, r4
 800056e:	b003      	add	sp, #12
 8000570:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000572:	2e02      	cmp	r6, #2
 8000574:	d903      	bls.n	800057e <_swilseek+0x2c>
 8000576:	f7ff ff61 	bl	800043c <__errno>
 800057a:	2316      	movs	r3, #22
 800057c:	e7f3      	b.n	8000566 <_swilseek+0x14>
 800057e:	2e01      	cmp	r6, #1
 8000580:	d112      	bne.n	80005a8 <_swilseek+0x56>
 8000582:	6843      	ldr	r3, [r0, #4]
 8000584:	18e4      	adds	r4, r4, r3
 8000586:	d4f6      	bmi.n	8000576 <_swilseek+0x24>
 8000588:	682b      	ldr	r3, [r5, #0]
 800058a:	260a      	movs	r6, #10
 800058c:	e9cd 3400 	strd	r3, r4, [sp]
 8000590:	466f      	mov	r7, sp
 8000592:	4630      	mov	r0, r6
 8000594:	4639      	mov	r1, r7
 8000596:	beab      	bkpt	0x00ab
 8000598:	4606      	mov	r6, r0
 800059a:	4630      	mov	r0, r6
 800059c:	f7ff ffa8 	bl	80004f0 <checkerror>
 80005a0:	2800      	cmp	r0, #0
 80005a2:	dbe1      	blt.n	8000568 <_swilseek+0x16>
 80005a4:	606c      	str	r4, [r5, #4]
 80005a6:	e7e1      	b.n	800056c <_swilseek+0x1a>
 80005a8:	2e02      	cmp	r6, #2
 80005aa:	d1ed      	bne.n	8000588 <_swilseek+0x36>
 80005ac:	6803      	ldr	r3, [r0, #0]
 80005ae:	9300      	str	r3, [sp, #0]
 80005b0:	260c      	movs	r6, #12
 80005b2:	466f      	mov	r7, sp
 80005b4:	4630      	mov	r0, r6
 80005b6:	4639      	mov	r1, r7
 80005b8:	beab      	bkpt	0x00ab
 80005ba:	4606      	mov	r6, r0
 80005bc:	4630      	mov	r0, r6
 80005be:	f7ff ff97 	bl	80004f0 <checkerror>
 80005c2:	1c43      	adds	r3, r0, #1
 80005c4:	d0d0      	beq.n	8000568 <_swilseek+0x16>
 80005c6:	4404      	add	r4, r0
 80005c8:	e7de      	b.n	8000588 <_swilseek+0x36>

080005ca <_lseek>:
 80005ca:	f7ff bfc2 	b.w	8000552 <_swilseek>

080005ce <_swiwrite>:
 80005ce:	b530      	push	{r4, r5, lr}
 80005d0:	b085      	sub	sp, #20
 80005d2:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80005d6:	9203      	str	r2, [sp, #12]
 80005d8:	2405      	movs	r4, #5
 80005da:	ad01      	add	r5, sp, #4
 80005dc:	4620      	mov	r0, r4
 80005de:	4629      	mov	r1, r5
 80005e0:	beab      	bkpt	0x00ab
 80005e2:	4604      	mov	r4, r0
 80005e4:	4620      	mov	r0, r4
 80005e6:	f7ff ff83 	bl	80004f0 <checkerror>
 80005ea:	b005      	add	sp, #20
 80005ec:	bd30      	pop	{r4, r5, pc}

080005ee <_write>:
 80005ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80005f0:	4615      	mov	r5, r2
 80005f2:	9101      	str	r1, [sp, #4]
 80005f4:	f7ff ff54 	bl	80004a0 <findslot>
 80005f8:	9901      	ldr	r1, [sp, #4]
 80005fa:	4604      	mov	r4, r0
 80005fc:	b930      	cbnz	r0, 800060c <_write+0x1e>
 80005fe:	f7ff ff1d 	bl	800043c <__errno>
 8000602:	2309      	movs	r3, #9
 8000604:	6003      	str	r3, [r0, #0]
 8000606:	f04f 30ff 	mov.w	r0, #4294967295
 800060a:	e012      	b.n	8000632 <_write+0x44>
 800060c:	6800      	ldr	r0, [r0, #0]
 800060e:	462a      	mov	r2, r5
 8000610:	f7ff ffdd 	bl	80005ce <_swiwrite>
 8000614:	2800      	cmp	r0, #0
 8000616:	dbf6      	blt.n	8000606 <_write+0x18>
 8000618:	6862      	ldr	r2, [r4, #4]
 800061a:	1a2b      	subs	r3, r5, r0
 800061c:	441a      	add	r2, r3
 800061e:	42a8      	cmp	r0, r5
 8000620:	6062      	str	r2, [r4, #4]
 8000622:	d105      	bne.n	8000630 <_write+0x42>
 8000624:	2000      	movs	r0, #0
 8000626:	b003      	add	sp, #12
 8000628:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800062c:	f7ff bf52 	b.w	80004d4 <error>
 8000630:	4618      	mov	r0, r3
 8000632:	b003      	add	sp, #12
 8000634:	bd30      	pop	{r4, r5, pc}

08000636 <_swiclose>:
 8000636:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000638:	2402      	movs	r4, #2
 800063a:	9001      	str	r0, [sp, #4]
 800063c:	ad01      	add	r5, sp, #4
 800063e:	4620      	mov	r0, r4
 8000640:	4629      	mov	r1, r5
 8000642:	beab      	bkpt	0x00ab
 8000644:	4604      	mov	r4, r0
 8000646:	4620      	mov	r0, r4
 8000648:	f7ff ff52 	bl	80004f0 <checkerror>
 800064c:	b003      	add	sp, #12
 800064e:	bd30      	pop	{r4, r5, pc}

08000650 <_close>:
 8000650:	b538      	push	{r3, r4, r5, lr}
 8000652:	4605      	mov	r5, r0
 8000654:	f7ff ff24 	bl	80004a0 <findslot>
 8000658:	4604      	mov	r4, r0
 800065a:	b930      	cbnz	r0, 800066a <_close+0x1a>
 800065c:	f7ff feee 	bl	800043c <__errno>
 8000660:	2309      	movs	r3, #9
 8000662:	6003      	str	r3, [r0, #0]
 8000664:	f04f 30ff 	mov.w	r0, #4294967295
 8000668:	bd38      	pop	{r3, r4, r5, pc}
 800066a:	3d01      	subs	r5, #1
 800066c:	2d01      	cmp	r5, #1
 800066e:	d809      	bhi.n	8000684 <_close+0x34>
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <_close+0x48>)
 8000672:	689a      	ldr	r2, [r3, #8]
 8000674:	691b      	ldr	r3, [r3, #16]
 8000676:	429a      	cmp	r2, r3
 8000678:	d104      	bne.n	8000684 <_close+0x34>
 800067a:	f04f 33ff 	mov.w	r3, #4294967295
 800067e:	6003      	str	r3, [r0, #0]
 8000680:	2000      	movs	r0, #0
 8000682:	e7f1      	b.n	8000668 <_close+0x18>
 8000684:	6820      	ldr	r0, [r4, #0]
 8000686:	f7ff ffd6 	bl	8000636 <_swiclose>
 800068a:	2800      	cmp	r0, #0
 800068c:	d1ec      	bne.n	8000668 <_close+0x18>
 800068e:	f04f 33ff 	mov.w	r3, #4294967295
 8000692:	6023      	str	r3, [r4, #0]
 8000694:	e7e8      	b.n	8000668 <_close+0x18>
 8000696:	bf00      	nop
 8000698:	20000098 	.word	0x20000098

0800069c <_swistat>:
 800069c:	b570      	push	{r4, r5, r6, lr}
 800069e:	460c      	mov	r4, r1
 80006a0:	f7ff fefe 	bl	80004a0 <findslot>
 80006a4:	4605      	mov	r5, r0
 80006a6:	b930      	cbnz	r0, 80006b6 <_swistat+0x1a>
 80006a8:	f7ff fec8 	bl	800043c <__errno>
 80006ac:	2309      	movs	r3, #9
 80006ae:	6003      	str	r3, [r0, #0]
 80006b0:	f04f 30ff 	mov.w	r0, #4294967295
 80006b4:	bd70      	pop	{r4, r5, r6, pc}
 80006b6:	6863      	ldr	r3, [r4, #4]
 80006b8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80006bc:	6063      	str	r3, [r4, #4]
 80006be:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80006c2:	64a3      	str	r3, [r4, #72]	; 0x48
 80006c4:	260c      	movs	r6, #12
 80006c6:	4630      	mov	r0, r6
 80006c8:	4629      	mov	r1, r5
 80006ca:	beab      	bkpt	0x00ab
 80006cc:	4605      	mov	r5, r0
 80006ce:	4628      	mov	r0, r5
 80006d0:	f7ff ff0e 	bl	80004f0 <checkerror>
 80006d4:	1c43      	adds	r3, r0, #1
 80006d6:	bf1c      	itt	ne
 80006d8:	6120      	strne	r0, [r4, #16]
 80006da:	2000      	movne	r0, #0
 80006dc:	e7ea      	b.n	80006b4 <_swistat+0x18>

080006de <_stat>:
 80006de:	b538      	push	{r3, r4, r5, lr}
 80006e0:	460d      	mov	r5, r1
 80006e2:	4604      	mov	r4, r0
 80006e4:	2258      	movs	r2, #88	; 0x58
 80006e6:	2100      	movs	r1, #0
 80006e8:	4628      	mov	r0, r5
 80006ea:	f7ff fed1 	bl	8000490 <memset>
 80006ee:	4620      	mov	r0, r4
 80006f0:	2100      	movs	r1, #0
 80006f2:	f000 f811 	bl	8000718 <_swiopen>
 80006f6:	1c43      	adds	r3, r0, #1
 80006f8:	4604      	mov	r4, r0
 80006fa:	d00b      	beq.n	8000714 <_stat+0x36>
 80006fc:	686b      	ldr	r3, [r5, #4]
 80006fe:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8000702:	606b      	str	r3, [r5, #4]
 8000704:	4629      	mov	r1, r5
 8000706:	f7ff ffc9 	bl	800069c <_swistat>
 800070a:	4605      	mov	r5, r0
 800070c:	4620      	mov	r0, r4
 800070e:	f7ff ff9f 	bl	8000650 <_close>
 8000712:	462c      	mov	r4, r5
 8000714:	4620      	mov	r0, r4
 8000716:	bd38      	pop	{r3, r4, r5, pc}

08000718 <_swiopen>:
 8000718:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800071c:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80007c8 <_swiopen+0xb0>
 8000720:	b097      	sub	sp, #92	; 0x5c
 8000722:	4607      	mov	r7, r0
 8000724:	460e      	mov	r6, r1
 8000726:	2500      	movs	r5, #0
 8000728:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 800072c:	1c61      	adds	r1, r4, #1
 800072e:	d037      	beq.n	80007a0 <_swiopen+0x88>
 8000730:	3501      	adds	r5, #1
 8000732:	2d14      	cmp	r5, #20
 8000734:	d1f8      	bne.n	8000728 <_swiopen+0x10>
 8000736:	f7ff fe81 	bl	800043c <__errno>
 800073a:	2318      	movs	r3, #24
 800073c:	6003      	str	r3, [r0, #0]
 800073e:	f04f 34ff 	mov.w	r4, #4294967295
 8000742:	e03d      	b.n	80007c0 <_swiopen+0xa8>
 8000744:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8000748:	f240 6301 	movw	r3, #1537	; 0x601
 800074c:	07b2      	lsls	r2, r6, #30
 800074e:	bf48      	it	mi
 8000750:	f044 0402 	orrmi.w	r4, r4, #2
 8000754:	421e      	tst	r6, r3
 8000756:	bf18      	it	ne
 8000758:	f044 0404 	orrne.w	r4, r4, #4
 800075c:	0733      	lsls	r3, r6, #28
 800075e:	bf48      	it	mi
 8000760:	f024 0404 	bicmi.w	r4, r4, #4
 8000764:	4638      	mov	r0, r7
 8000766:	bf48      	it	mi
 8000768:	f044 0408 	orrmi.w	r4, r4, #8
 800076c:	9700      	str	r7, [sp, #0]
 800076e:	f7ff fd3d 	bl	80001ec <strlen>
 8000772:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8000776:	2401      	movs	r4, #1
 8000778:	4620      	mov	r0, r4
 800077a:	4649      	mov	r1, r9
 800077c:	beab      	bkpt	0x00ab
 800077e:	4604      	mov	r4, r0
 8000780:	2c00      	cmp	r4, #0
 8000782:	db08      	blt.n	8000796 <_swiopen+0x7e>
 8000784:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8000788:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 800078c:	2300      	movs	r3, #0
 800078e:	f8c8 3004 	str.w	r3, [r8, #4]
 8000792:	462c      	mov	r4, r5
 8000794:	e014      	b.n	80007c0 <_swiopen+0xa8>
 8000796:	4620      	mov	r0, r4
 8000798:	f7ff fe9c 	bl	80004d4 <error>
 800079c:	4604      	mov	r4, r0
 800079e:	e00f      	b.n	80007c0 <_swiopen+0xa8>
 80007a0:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 80007a4:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 80007a8:	46e9      	mov	r9, sp
 80007aa:	d1cb      	bne.n	8000744 <_swiopen+0x2c>
 80007ac:	4649      	mov	r1, r9
 80007ae:	4638      	mov	r0, r7
 80007b0:	f7ff ff95 	bl	80006de <_stat>
 80007b4:	3001      	adds	r0, #1
 80007b6:	d0c5      	beq.n	8000744 <_swiopen+0x2c>
 80007b8:	f7ff fe40 	bl	800043c <__errno>
 80007bc:	2311      	movs	r3, #17
 80007be:	6003      	str	r3, [r0, #0]
 80007c0:	4620      	mov	r0, r4
 80007c2:	b017      	add	sp, #92	; 0x5c
 80007c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80007c8:	20000098 	.word	0x20000098

080007cc <_get_semihosting_exts>:
 80007cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80007d0:	4606      	mov	r6, r0
 80007d2:	460f      	mov	r7, r1
 80007d4:	482a      	ldr	r0, [pc, #168]	; (8000880 <_get_semihosting_exts+0xb4>)
 80007d6:	2100      	movs	r1, #0
 80007d8:	4615      	mov	r5, r2
 80007da:	f7ff ff9d 	bl	8000718 <_swiopen>
 80007de:	462a      	mov	r2, r5
 80007e0:	4604      	mov	r4, r0
 80007e2:	2100      	movs	r1, #0
 80007e4:	4630      	mov	r0, r6
 80007e6:	f7ff fe53 	bl	8000490 <memset>
 80007ea:	1c63      	adds	r3, r4, #1
 80007ec:	d016      	beq.n	800081c <_get_semihosting_exts+0x50>
 80007ee:	4620      	mov	r0, r4
 80007f0:	f7ff fe56 	bl	80004a0 <findslot>
 80007f4:	f04f 090c 	mov.w	r9, #12
 80007f8:	4680      	mov	r8, r0
 80007fa:	4648      	mov	r0, r9
 80007fc:	4641      	mov	r1, r8
 80007fe:	beab      	bkpt	0x00ab
 8000800:	4680      	mov	r8, r0
 8000802:	4640      	mov	r0, r8
 8000804:	f7ff fe74 	bl	80004f0 <checkerror>
 8000808:	2803      	cmp	r0, #3
 800080a:	dd02      	ble.n	8000812 <_get_semihosting_exts+0x46>
 800080c:	1ec3      	subs	r3, r0, #3
 800080e:	42ab      	cmp	r3, r5
 8000810:	dc08      	bgt.n	8000824 <_get_semihosting_exts+0x58>
 8000812:	4620      	mov	r0, r4
 8000814:	f7ff ff1c 	bl	8000650 <_close>
 8000818:	f04f 34ff 	mov.w	r4, #4294967295
 800081c:	4620      	mov	r0, r4
 800081e:	b003      	add	sp, #12
 8000820:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000824:	2204      	movs	r2, #4
 8000826:	eb0d 0102 	add.w	r1, sp, r2
 800082a:	4620      	mov	r0, r4
 800082c:	f7ff fe75 	bl	800051a <_read>
 8000830:	2803      	cmp	r0, #3
 8000832:	ddee      	ble.n	8000812 <_get_semihosting_exts+0x46>
 8000834:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000838:	2b53      	cmp	r3, #83	; 0x53
 800083a:	d1ea      	bne.n	8000812 <_get_semihosting_exts+0x46>
 800083c:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8000840:	2b48      	cmp	r3, #72	; 0x48
 8000842:	d1e6      	bne.n	8000812 <_get_semihosting_exts+0x46>
 8000844:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8000848:	2b46      	cmp	r3, #70	; 0x46
 800084a:	d1e2      	bne.n	8000812 <_get_semihosting_exts+0x46>
 800084c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000850:	2b42      	cmp	r3, #66	; 0x42
 8000852:	d1de      	bne.n	8000812 <_get_semihosting_exts+0x46>
 8000854:	2201      	movs	r2, #1
 8000856:	4639      	mov	r1, r7
 8000858:	4620      	mov	r0, r4
 800085a:	f7ff fe7a 	bl	8000552 <_swilseek>
 800085e:	2800      	cmp	r0, #0
 8000860:	dbd7      	blt.n	8000812 <_get_semihosting_exts+0x46>
 8000862:	462a      	mov	r2, r5
 8000864:	4631      	mov	r1, r6
 8000866:	4620      	mov	r0, r4
 8000868:	f7ff fe57 	bl	800051a <_read>
 800086c:	4605      	mov	r5, r0
 800086e:	4620      	mov	r0, r4
 8000870:	f7ff feee 	bl	8000650 <_close>
 8000874:	4628      	mov	r0, r5
 8000876:	f7ff fe3b 	bl	80004f0 <checkerror>
 800087a:	4604      	mov	r4, r0
 800087c:	e7ce      	b.n	800081c <_get_semihosting_exts+0x50>
 800087e:	bf00      	nop
 8000880:	0800102c 	.word	0x0800102c

08000884 <initialise_semihosting_exts>:
 8000884:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000886:	4d0a      	ldr	r5, [pc, #40]	; (80008b0 <initialise_semihosting_exts+0x2c>)
 8000888:	4c0a      	ldr	r4, [pc, #40]	; (80008b4 <initialise_semihosting_exts+0x30>)
 800088a:	2100      	movs	r1, #0
 800088c:	2201      	movs	r2, #1
 800088e:	a801      	add	r0, sp, #4
 8000890:	6029      	str	r1, [r5, #0]
 8000892:	6022      	str	r2, [r4, #0]
 8000894:	f7ff ff9a 	bl	80007cc <_get_semihosting_exts>
 8000898:	2800      	cmp	r0, #0
 800089a:	dd07      	ble.n	80008ac <initialise_semihosting_exts+0x28>
 800089c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80008a0:	f003 0201 	and.w	r2, r3, #1
 80008a4:	f003 0302 	and.w	r3, r3, #2
 80008a8:	602a      	str	r2, [r5, #0]
 80008aa:	6023      	str	r3, [r4, #0]
 80008ac:	b003      	add	sp, #12
 80008ae:	bd30      	pop	{r4, r5, pc}
 80008b0:	20000064 	.word	0x20000064
 80008b4:	20000068 	.word	0x20000068

080008b8 <_has_ext_stdout_stderr>:
 80008b8:	b510      	push	{r4, lr}
 80008ba:	4c04      	ldr	r4, [pc, #16]	; (80008cc <_has_ext_stdout_stderr+0x14>)
 80008bc:	6823      	ldr	r3, [r4, #0]
 80008be:	2b00      	cmp	r3, #0
 80008c0:	da01      	bge.n	80008c6 <_has_ext_stdout_stderr+0xe>
 80008c2:	f7ff ffdf 	bl	8000884 <initialise_semihosting_exts>
 80008c6:	6820      	ldr	r0, [r4, #0]
 80008c8:	bd10      	pop	{r4, pc}
 80008ca:	bf00      	nop
 80008cc:	20000068 	.word	0x20000068

080008d0 <initialise_monitor_handles>:
 80008d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008d4:	b085      	sub	sp, #20
 80008d6:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8000988 <initialise_monitor_handles+0xb8>
 80008da:	f8cd 9004 	str.w	r9, [sp, #4]
 80008de:	2303      	movs	r3, #3
 80008e0:	2400      	movs	r4, #0
 80008e2:	9303      	str	r3, [sp, #12]
 80008e4:	af01      	add	r7, sp, #4
 80008e6:	9402      	str	r4, [sp, #8]
 80008e8:	2501      	movs	r5, #1
 80008ea:	4628      	mov	r0, r5
 80008ec:	4639      	mov	r1, r7
 80008ee:	beab      	bkpt	0x00ab
 80008f0:	4605      	mov	r5, r0
 80008f2:	f8df 8098 	ldr.w	r8, [pc, #152]	; 800098c <initialise_monitor_handles+0xbc>
 80008f6:	4623      	mov	r3, r4
 80008f8:	4c20      	ldr	r4, [pc, #128]	; (800097c <initialise_monitor_handles+0xac>)
 80008fa:	f8c8 5000 	str.w	r5, [r8]
 80008fe:	f04f 32ff 	mov.w	r2, #4294967295
 8000902:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 8000906:	3301      	adds	r3, #1
 8000908:	2b14      	cmp	r3, #20
 800090a:	d1fa      	bne.n	8000902 <initialise_monitor_handles+0x32>
 800090c:	f7ff ffd4 	bl	80008b8 <_has_ext_stdout_stderr>
 8000910:	4d1b      	ldr	r5, [pc, #108]	; (8000980 <initialise_monitor_handles+0xb0>)
 8000912:	b1d0      	cbz	r0, 800094a <initialise_monitor_handles+0x7a>
 8000914:	f04f 0a03 	mov.w	sl, #3
 8000918:	2304      	movs	r3, #4
 800091a:	f8cd 9004 	str.w	r9, [sp, #4]
 800091e:	2601      	movs	r6, #1
 8000920:	f8cd a00c 	str.w	sl, [sp, #12]
 8000924:	9302      	str	r3, [sp, #8]
 8000926:	4630      	mov	r0, r6
 8000928:	4639      	mov	r1, r7
 800092a:	beab      	bkpt	0x00ab
 800092c:	4683      	mov	fp, r0
 800092e:	4b15      	ldr	r3, [pc, #84]	; (8000984 <initialise_monitor_handles+0xb4>)
 8000930:	f8cd 9004 	str.w	r9, [sp, #4]
 8000934:	f8c3 b000 	str.w	fp, [r3]
 8000938:	2308      	movs	r3, #8
 800093a:	f8cd a00c 	str.w	sl, [sp, #12]
 800093e:	9302      	str	r3, [sp, #8]
 8000940:	4630      	mov	r0, r6
 8000942:	4639      	mov	r1, r7
 8000944:	beab      	bkpt	0x00ab
 8000946:	4606      	mov	r6, r0
 8000948:	602e      	str	r6, [r5, #0]
 800094a:	682b      	ldr	r3, [r5, #0]
 800094c:	3301      	adds	r3, #1
 800094e:	bf02      	ittt	eq
 8000950:	4b0c      	ldreq	r3, [pc, #48]	; (8000984 <initialise_monitor_handles+0xb4>)
 8000952:	681b      	ldreq	r3, [r3, #0]
 8000954:	602b      	streq	r3, [r5, #0]
 8000956:	2600      	movs	r6, #0
 8000958:	f8d8 3000 	ldr.w	r3, [r8]
 800095c:	6023      	str	r3, [r4, #0]
 800095e:	6066      	str	r6, [r4, #4]
 8000960:	f7ff ffaa 	bl	80008b8 <_has_ext_stdout_stderr>
 8000964:	b130      	cbz	r0, 8000974 <initialise_monitor_handles+0xa4>
 8000966:	4b07      	ldr	r3, [pc, #28]	; (8000984 <initialise_monitor_handles+0xb4>)
 8000968:	681b      	ldr	r3, [r3, #0]
 800096a:	e9c4 3602 	strd	r3, r6, [r4, #8]
 800096e:	682b      	ldr	r3, [r5, #0]
 8000970:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8000974:	b005      	add	sp, #20
 8000976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800097a:	bf00      	nop
 800097c:	20000098 	.word	0x20000098
 8000980:	2000008c 	.word	0x2000008c
 8000984:	20000094 	.word	0x20000094
 8000988:	08001042 	.word	0x08001042
 800098c:	20000090 	.word	0x20000090

08000990 <std>:
 8000990:	2300      	movs	r3, #0
 8000992:	b510      	push	{r4, lr}
 8000994:	4604      	mov	r4, r0
 8000996:	e9c0 3300 	strd	r3, r3, [r0]
 800099a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800099e:	6083      	str	r3, [r0, #8]
 80009a0:	8181      	strh	r1, [r0, #12]
 80009a2:	6643      	str	r3, [r0, #100]	; 0x64
 80009a4:	81c2      	strh	r2, [r0, #14]
 80009a6:	6183      	str	r3, [r0, #24]
 80009a8:	4619      	mov	r1, r3
 80009aa:	2208      	movs	r2, #8
 80009ac:	305c      	adds	r0, #92	; 0x5c
 80009ae:	f7ff fd6f 	bl	8000490 <memset>
 80009b2:	4b05      	ldr	r3, [pc, #20]	; (80009c8 <std+0x38>)
 80009b4:	6263      	str	r3, [r4, #36]	; 0x24
 80009b6:	4b05      	ldr	r3, [pc, #20]	; (80009cc <std+0x3c>)
 80009b8:	62a3      	str	r3, [r4, #40]	; 0x28
 80009ba:	4b05      	ldr	r3, [pc, #20]	; (80009d0 <std+0x40>)
 80009bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80009be:	4b05      	ldr	r3, [pc, #20]	; (80009d4 <std+0x44>)
 80009c0:	6224      	str	r4, [r4, #32]
 80009c2:	6323      	str	r3, [r4, #48]	; 0x30
 80009c4:	bd10      	pop	{r4, pc}
 80009c6:	bf00      	nop
 80009c8:	08000cc9 	.word	0x08000cc9
 80009cc:	08000ceb 	.word	0x08000ceb
 80009d0:	08000d23 	.word	0x08000d23
 80009d4:	08000d47 	.word	0x08000d47

080009d8 <_cleanup_r>:
 80009d8:	4901      	ldr	r1, [pc, #4]	; (80009e0 <_cleanup_r+0x8>)
 80009da:	f000 b8af 	b.w	8000b3c <_fwalk_reent>
 80009de:	bf00      	nop
 80009e0:	08000ea1 	.word	0x08000ea1

080009e4 <__sfmoreglue>:
 80009e4:	b570      	push	{r4, r5, r6, lr}
 80009e6:	2268      	movs	r2, #104	; 0x68
 80009e8:	1e4d      	subs	r5, r1, #1
 80009ea:	4355      	muls	r5, r2
 80009ec:	460e      	mov	r6, r1
 80009ee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80009f2:	f000 f8e5 	bl	8000bc0 <_malloc_r>
 80009f6:	4604      	mov	r4, r0
 80009f8:	b140      	cbz	r0, 8000a0c <__sfmoreglue+0x28>
 80009fa:	2100      	movs	r1, #0
 80009fc:	e9c0 1600 	strd	r1, r6, [r0]
 8000a00:	300c      	adds	r0, #12
 8000a02:	60a0      	str	r0, [r4, #8]
 8000a04:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a08:	f7ff fd42 	bl	8000490 <memset>
 8000a0c:	4620      	mov	r0, r4
 8000a0e:	bd70      	pop	{r4, r5, r6, pc}

08000a10 <__sfp_lock_acquire>:
 8000a10:	4801      	ldr	r0, [pc, #4]	; (8000a18 <__sfp_lock_acquire+0x8>)
 8000a12:	f000 b8b3 	b.w	8000b7c <__retarget_lock_acquire_recursive>
 8000a16:	bf00      	nop
 8000a18:	20000139 	.word	0x20000139

08000a1c <__sfp_lock_release>:
 8000a1c:	4801      	ldr	r0, [pc, #4]	; (8000a24 <__sfp_lock_release+0x8>)
 8000a1e:	f000 b8ae 	b.w	8000b7e <__retarget_lock_release_recursive>
 8000a22:	bf00      	nop
 8000a24:	20000139 	.word	0x20000139

08000a28 <__sinit_lock_acquire>:
 8000a28:	4801      	ldr	r0, [pc, #4]	; (8000a30 <__sinit_lock_acquire+0x8>)
 8000a2a:	f000 b8a7 	b.w	8000b7c <__retarget_lock_acquire_recursive>
 8000a2e:	bf00      	nop
 8000a30:	2000013a 	.word	0x2000013a

08000a34 <__sinit_lock_release>:
 8000a34:	4801      	ldr	r0, [pc, #4]	; (8000a3c <__sinit_lock_release+0x8>)
 8000a36:	f000 b8a2 	b.w	8000b7e <__retarget_lock_release_recursive>
 8000a3a:	bf00      	nop
 8000a3c:	2000013a 	.word	0x2000013a

08000a40 <__sinit>:
 8000a40:	b510      	push	{r4, lr}
 8000a42:	4604      	mov	r4, r0
 8000a44:	f7ff fff0 	bl	8000a28 <__sinit_lock_acquire>
 8000a48:	69a3      	ldr	r3, [r4, #24]
 8000a4a:	b11b      	cbz	r3, 8000a54 <__sinit+0x14>
 8000a4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000a50:	f7ff bff0 	b.w	8000a34 <__sinit_lock_release>
 8000a54:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000a58:	6523      	str	r3, [r4, #80]	; 0x50
 8000a5a:	4b13      	ldr	r3, [pc, #76]	; (8000aa8 <__sinit+0x68>)
 8000a5c:	4a13      	ldr	r2, [pc, #76]	; (8000aac <__sinit+0x6c>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	62a2      	str	r2, [r4, #40]	; 0x28
 8000a62:	42a3      	cmp	r3, r4
 8000a64:	bf04      	itt	eq
 8000a66:	2301      	moveq	r3, #1
 8000a68:	61a3      	streq	r3, [r4, #24]
 8000a6a:	4620      	mov	r0, r4
 8000a6c:	f000 f820 	bl	8000ab0 <__sfp>
 8000a70:	6060      	str	r0, [r4, #4]
 8000a72:	4620      	mov	r0, r4
 8000a74:	f000 f81c 	bl	8000ab0 <__sfp>
 8000a78:	60a0      	str	r0, [r4, #8]
 8000a7a:	4620      	mov	r0, r4
 8000a7c:	f000 f818 	bl	8000ab0 <__sfp>
 8000a80:	2200      	movs	r2, #0
 8000a82:	60e0      	str	r0, [r4, #12]
 8000a84:	2104      	movs	r1, #4
 8000a86:	6860      	ldr	r0, [r4, #4]
 8000a88:	f7ff ff82 	bl	8000990 <std>
 8000a8c:	68a0      	ldr	r0, [r4, #8]
 8000a8e:	2201      	movs	r2, #1
 8000a90:	2109      	movs	r1, #9
 8000a92:	f7ff ff7d 	bl	8000990 <std>
 8000a96:	68e0      	ldr	r0, [r4, #12]
 8000a98:	2202      	movs	r2, #2
 8000a9a:	2112      	movs	r1, #18
 8000a9c:	f7ff ff78 	bl	8000990 <std>
 8000aa0:	2301      	movs	r3, #1
 8000aa2:	61a3      	str	r3, [r4, #24]
 8000aa4:	e7d2      	b.n	8000a4c <__sinit+0xc>
 8000aa6:	bf00      	nop
 8000aa8:	08001028 	.word	0x08001028
 8000aac:	080009d9 	.word	0x080009d9

08000ab0 <__sfp>:
 8000ab0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ab2:	4607      	mov	r7, r0
 8000ab4:	f7ff ffac 	bl	8000a10 <__sfp_lock_acquire>
 8000ab8:	4b1e      	ldr	r3, [pc, #120]	; (8000b34 <__sfp+0x84>)
 8000aba:	681e      	ldr	r6, [r3, #0]
 8000abc:	69b3      	ldr	r3, [r6, #24]
 8000abe:	b913      	cbnz	r3, 8000ac6 <__sfp+0x16>
 8000ac0:	4630      	mov	r0, r6
 8000ac2:	f7ff ffbd 	bl	8000a40 <__sinit>
 8000ac6:	3648      	adds	r6, #72	; 0x48
 8000ac8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000acc:	3b01      	subs	r3, #1
 8000ace:	d503      	bpl.n	8000ad8 <__sfp+0x28>
 8000ad0:	6833      	ldr	r3, [r6, #0]
 8000ad2:	b30b      	cbz	r3, 8000b18 <__sfp+0x68>
 8000ad4:	6836      	ldr	r6, [r6, #0]
 8000ad6:	e7f7      	b.n	8000ac8 <__sfp+0x18>
 8000ad8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000adc:	b9d5      	cbnz	r5, 8000b14 <__sfp+0x64>
 8000ade:	4b16      	ldr	r3, [pc, #88]	; (8000b38 <__sfp+0x88>)
 8000ae0:	60e3      	str	r3, [r4, #12]
 8000ae2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000ae6:	6665      	str	r5, [r4, #100]	; 0x64
 8000ae8:	f000 f847 	bl	8000b7a <__retarget_lock_init_recursive>
 8000aec:	f7ff ff96 	bl	8000a1c <__sfp_lock_release>
 8000af0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000af4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000af8:	6025      	str	r5, [r4, #0]
 8000afa:	61a5      	str	r5, [r4, #24]
 8000afc:	2208      	movs	r2, #8
 8000afe:	4629      	mov	r1, r5
 8000b00:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b04:	f7ff fcc4 	bl	8000490 <memset>
 8000b08:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b0c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b10:	4620      	mov	r0, r4
 8000b12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b14:	3468      	adds	r4, #104	; 0x68
 8000b16:	e7d9      	b.n	8000acc <__sfp+0x1c>
 8000b18:	2104      	movs	r1, #4
 8000b1a:	4638      	mov	r0, r7
 8000b1c:	f7ff ff62 	bl	80009e4 <__sfmoreglue>
 8000b20:	4604      	mov	r4, r0
 8000b22:	6030      	str	r0, [r6, #0]
 8000b24:	2800      	cmp	r0, #0
 8000b26:	d1d5      	bne.n	8000ad4 <__sfp+0x24>
 8000b28:	f7ff ff78 	bl	8000a1c <__sfp_lock_release>
 8000b2c:	230c      	movs	r3, #12
 8000b2e:	603b      	str	r3, [r7, #0]
 8000b30:	e7ee      	b.n	8000b10 <__sfp+0x60>
 8000b32:	bf00      	nop
 8000b34:	08001028 	.word	0x08001028
 8000b38:	ffff0001 	.word	0xffff0001

08000b3c <_fwalk_reent>:
 8000b3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b40:	4606      	mov	r6, r0
 8000b42:	4688      	mov	r8, r1
 8000b44:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b48:	2700      	movs	r7, #0
 8000b4a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000b4e:	f1b9 0901 	subs.w	r9, r9, #1
 8000b52:	d505      	bpl.n	8000b60 <_fwalk_reent+0x24>
 8000b54:	6824      	ldr	r4, [r4, #0]
 8000b56:	2c00      	cmp	r4, #0
 8000b58:	d1f7      	bne.n	8000b4a <_fwalk_reent+0xe>
 8000b5a:	4638      	mov	r0, r7
 8000b5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b60:	89ab      	ldrh	r3, [r5, #12]
 8000b62:	2b01      	cmp	r3, #1
 8000b64:	d907      	bls.n	8000b76 <_fwalk_reent+0x3a>
 8000b66:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b6a:	3301      	adds	r3, #1
 8000b6c:	d003      	beq.n	8000b76 <_fwalk_reent+0x3a>
 8000b6e:	4629      	mov	r1, r5
 8000b70:	4630      	mov	r0, r6
 8000b72:	47c0      	blx	r8
 8000b74:	4307      	orrs	r7, r0
 8000b76:	3568      	adds	r5, #104	; 0x68
 8000b78:	e7e9      	b.n	8000b4e <_fwalk_reent+0x12>

08000b7a <__retarget_lock_init_recursive>:
 8000b7a:	4770      	bx	lr

08000b7c <__retarget_lock_acquire_recursive>:
 8000b7c:	4770      	bx	lr

08000b7e <__retarget_lock_release_recursive>:
 8000b7e:	4770      	bx	lr

08000b80 <sbrk_aligned>:
 8000b80:	b570      	push	{r4, r5, r6, lr}
 8000b82:	4e0e      	ldr	r6, [pc, #56]	; (8000bbc <sbrk_aligned+0x3c>)
 8000b84:	460c      	mov	r4, r1
 8000b86:	6831      	ldr	r1, [r6, #0]
 8000b88:	4605      	mov	r5, r0
 8000b8a:	b911      	cbnz	r1, 8000b92 <sbrk_aligned+0x12>
 8000b8c:	f000 f88c 	bl	8000ca8 <_sbrk_r>
 8000b90:	6030      	str	r0, [r6, #0]
 8000b92:	4621      	mov	r1, r4
 8000b94:	4628      	mov	r0, r5
 8000b96:	f000 f887 	bl	8000ca8 <_sbrk_r>
 8000b9a:	1c43      	adds	r3, r0, #1
 8000b9c:	d00a      	beq.n	8000bb4 <sbrk_aligned+0x34>
 8000b9e:	1cc4      	adds	r4, r0, #3
 8000ba0:	f024 0403 	bic.w	r4, r4, #3
 8000ba4:	42a0      	cmp	r0, r4
 8000ba6:	d007      	beq.n	8000bb8 <sbrk_aligned+0x38>
 8000ba8:	1a21      	subs	r1, r4, r0
 8000baa:	4628      	mov	r0, r5
 8000bac:	f000 f87c 	bl	8000ca8 <_sbrk_r>
 8000bb0:	3001      	adds	r0, #1
 8000bb2:	d101      	bne.n	8000bb8 <sbrk_aligned+0x38>
 8000bb4:	f04f 34ff 	mov.w	r4, #4294967295
 8000bb8:	4620      	mov	r0, r4
 8000bba:	bd70      	pop	{r4, r5, r6, pc}
 8000bbc:	20000140 	.word	0x20000140

08000bc0 <_malloc_r>:
 8000bc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bc4:	1ccd      	adds	r5, r1, #3
 8000bc6:	f025 0503 	bic.w	r5, r5, #3
 8000bca:	3508      	adds	r5, #8
 8000bcc:	2d0c      	cmp	r5, #12
 8000bce:	bf38      	it	cc
 8000bd0:	250c      	movcc	r5, #12
 8000bd2:	2d00      	cmp	r5, #0
 8000bd4:	4607      	mov	r7, r0
 8000bd6:	db01      	blt.n	8000bdc <_malloc_r+0x1c>
 8000bd8:	42a9      	cmp	r1, r5
 8000bda:	d905      	bls.n	8000be8 <_malloc_r+0x28>
 8000bdc:	230c      	movs	r3, #12
 8000bde:	603b      	str	r3, [r7, #0]
 8000be0:	2600      	movs	r6, #0
 8000be2:	4630      	mov	r0, r6
 8000be4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000be8:	4e2e      	ldr	r6, [pc, #184]	; (8000ca4 <_malloc_r+0xe4>)
 8000bea:	f000 f9a7 	bl	8000f3c <__malloc_lock>
 8000bee:	6833      	ldr	r3, [r6, #0]
 8000bf0:	461c      	mov	r4, r3
 8000bf2:	bb34      	cbnz	r4, 8000c42 <_malloc_r+0x82>
 8000bf4:	4629      	mov	r1, r5
 8000bf6:	4638      	mov	r0, r7
 8000bf8:	f7ff ffc2 	bl	8000b80 <sbrk_aligned>
 8000bfc:	1c43      	adds	r3, r0, #1
 8000bfe:	4604      	mov	r4, r0
 8000c00:	d14d      	bne.n	8000c9e <_malloc_r+0xde>
 8000c02:	6834      	ldr	r4, [r6, #0]
 8000c04:	4626      	mov	r6, r4
 8000c06:	2e00      	cmp	r6, #0
 8000c08:	d140      	bne.n	8000c8c <_malloc_r+0xcc>
 8000c0a:	6823      	ldr	r3, [r4, #0]
 8000c0c:	4631      	mov	r1, r6
 8000c0e:	4638      	mov	r0, r7
 8000c10:	eb04 0803 	add.w	r8, r4, r3
 8000c14:	f000 f848 	bl	8000ca8 <_sbrk_r>
 8000c18:	4580      	cmp	r8, r0
 8000c1a:	d13a      	bne.n	8000c92 <_malloc_r+0xd2>
 8000c1c:	6821      	ldr	r1, [r4, #0]
 8000c1e:	3503      	adds	r5, #3
 8000c20:	1a6d      	subs	r5, r5, r1
 8000c22:	f025 0503 	bic.w	r5, r5, #3
 8000c26:	3508      	adds	r5, #8
 8000c28:	2d0c      	cmp	r5, #12
 8000c2a:	bf38      	it	cc
 8000c2c:	250c      	movcc	r5, #12
 8000c2e:	4629      	mov	r1, r5
 8000c30:	4638      	mov	r0, r7
 8000c32:	f7ff ffa5 	bl	8000b80 <sbrk_aligned>
 8000c36:	3001      	adds	r0, #1
 8000c38:	d02b      	beq.n	8000c92 <_malloc_r+0xd2>
 8000c3a:	6823      	ldr	r3, [r4, #0]
 8000c3c:	442b      	add	r3, r5
 8000c3e:	6023      	str	r3, [r4, #0]
 8000c40:	e00e      	b.n	8000c60 <_malloc_r+0xa0>
 8000c42:	6822      	ldr	r2, [r4, #0]
 8000c44:	1b52      	subs	r2, r2, r5
 8000c46:	d41e      	bmi.n	8000c86 <_malloc_r+0xc6>
 8000c48:	2a0b      	cmp	r2, #11
 8000c4a:	d916      	bls.n	8000c7a <_malloc_r+0xba>
 8000c4c:	1961      	adds	r1, r4, r5
 8000c4e:	42a3      	cmp	r3, r4
 8000c50:	6025      	str	r5, [r4, #0]
 8000c52:	bf18      	it	ne
 8000c54:	6059      	strne	r1, [r3, #4]
 8000c56:	6863      	ldr	r3, [r4, #4]
 8000c58:	bf08      	it	eq
 8000c5a:	6031      	streq	r1, [r6, #0]
 8000c5c:	5162      	str	r2, [r4, r5]
 8000c5e:	604b      	str	r3, [r1, #4]
 8000c60:	4638      	mov	r0, r7
 8000c62:	f104 060b 	add.w	r6, r4, #11
 8000c66:	f000 f96f 	bl	8000f48 <__malloc_unlock>
 8000c6a:	f026 0607 	bic.w	r6, r6, #7
 8000c6e:	1d23      	adds	r3, r4, #4
 8000c70:	1af2      	subs	r2, r6, r3
 8000c72:	d0b6      	beq.n	8000be2 <_malloc_r+0x22>
 8000c74:	1b9b      	subs	r3, r3, r6
 8000c76:	50a3      	str	r3, [r4, r2]
 8000c78:	e7b3      	b.n	8000be2 <_malloc_r+0x22>
 8000c7a:	6862      	ldr	r2, [r4, #4]
 8000c7c:	42a3      	cmp	r3, r4
 8000c7e:	bf0c      	ite	eq
 8000c80:	6032      	streq	r2, [r6, #0]
 8000c82:	605a      	strne	r2, [r3, #4]
 8000c84:	e7ec      	b.n	8000c60 <_malloc_r+0xa0>
 8000c86:	4623      	mov	r3, r4
 8000c88:	6864      	ldr	r4, [r4, #4]
 8000c8a:	e7b2      	b.n	8000bf2 <_malloc_r+0x32>
 8000c8c:	4634      	mov	r4, r6
 8000c8e:	6876      	ldr	r6, [r6, #4]
 8000c90:	e7b9      	b.n	8000c06 <_malloc_r+0x46>
 8000c92:	230c      	movs	r3, #12
 8000c94:	603b      	str	r3, [r7, #0]
 8000c96:	4638      	mov	r0, r7
 8000c98:	f000 f956 	bl	8000f48 <__malloc_unlock>
 8000c9c:	e7a1      	b.n	8000be2 <_malloc_r+0x22>
 8000c9e:	6025      	str	r5, [r4, #0]
 8000ca0:	e7de      	b.n	8000c60 <_malloc_r+0xa0>
 8000ca2:	bf00      	nop
 8000ca4:	2000013c 	.word	0x2000013c

08000ca8 <_sbrk_r>:
 8000ca8:	b538      	push	{r3, r4, r5, lr}
 8000caa:	4d06      	ldr	r5, [pc, #24]	; (8000cc4 <_sbrk_r+0x1c>)
 8000cac:	2300      	movs	r3, #0
 8000cae:	4604      	mov	r4, r0
 8000cb0:	4608      	mov	r0, r1
 8000cb2:	602b      	str	r3, [r5, #0]
 8000cb4:	f7ff fb62 	bl	800037c <_sbrk>
 8000cb8:	1c43      	adds	r3, r0, #1
 8000cba:	d102      	bne.n	8000cc2 <_sbrk_r+0x1a>
 8000cbc:	682b      	ldr	r3, [r5, #0]
 8000cbe:	b103      	cbz	r3, 8000cc2 <_sbrk_r+0x1a>
 8000cc0:	6023      	str	r3, [r4, #0]
 8000cc2:	bd38      	pop	{r3, r4, r5, pc}
 8000cc4:	20000144 	.word	0x20000144

08000cc8 <__sread>:
 8000cc8:	b510      	push	{r4, lr}
 8000cca:	460c      	mov	r4, r1
 8000ccc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cd0:	f000 f98c 	bl	8000fec <_read_r>
 8000cd4:	2800      	cmp	r0, #0
 8000cd6:	bfab      	itete	ge
 8000cd8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000cda:	89a3      	ldrhlt	r3, [r4, #12]
 8000cdc:	181b      	addge	r3, r3, r0
 8000cde:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ce2:	bfac      	ite	ge
 8000ce4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ce6:	81a3      	strhlt	r3, [r4, #12]
 8000ce8:	bd10      	pop	{r4, pc}

08000cea <__swrite>:
 8000cea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cee:	461f      	mov	r7, r3
 8000cf0:	898b      	ldrh	r3, [r1, #12]
 8000cf2:	05db      	lsls	r3, r3, #23
 8000cf4:	4605      	mov	r5, r0
 8000cf6:	460c      	mov	r4, r1
 8000cf8:	4616      	mov	r6, r2
 8000cfa:	d505      	bpl.n	8000d08 <__swrite+0x1e>
 8000cfc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d00:	2302      	movs	r3, #2
 8000d02:	2200      	movs	r2, #0
 8000d04:	f000 f908 	bl	8000f18 <_lseek_r>
 8000d08:	89a3      	ldrh	r3, [r4, #12]
 8000d0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d0e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000d12:	81a3      	strh	r3, [r4, #12]
 8000d14:	4632      	mov	r2, r6
 8000d16:	463b      	mov	r3, r7
 8000d18:	4628      	mov	r0, r5
 8000d1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d1e:	f000 b817 	b.w	8000d50 <_write_r>

08000d22 <__sseek>:
 8000d22:	b510      	push	{r4, lr}
 8000d24:	460c      	mov	r4, r1
 8000d26:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d2a:	f000 f8f5 	bl	8000f18 <_lseek_r>
 8000d2e:	1c43      	adds	r3, r0, #1
 8000d30:	89a3      	ldrh	r3, [r4, #12]
 8000d32:	bf15      	itete	ne
 8000d34:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d36:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d3a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d3e:	81a3      	strheq	r3, [r4, #12]
 8000d40:	bf18      	it	ne
 8000d42:	81a3      	strhne	r3, [r4, #12]
 8000d44:	bd10      	pop	{r4, pc}

08000d46 <__sclose>:
 8000d46:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d4a:	f000 b813 	b.w	8000d74 <_close_r>
	...

08000d50 <_write_r>:
 8000d50:	b538      	push	{r3, r4, r5, lr}
 8000d52:	4d07      	ldr	r5, [pc, #28]	; (8000d70 <_write_r+0x20>)
 8000d54:	4604      	mov	r4, r0
 8000d56:	4608      	mov	r0, r1
 8000d58:	4611      	mov	r1, r2
 8000d5a:	2200      	movs	r2, #0
 8000d5c:	602a      	str	r2, [r5, #0]
 8000d5e:	461a      	mov	r2, r3
 8000d60:	f7ff fc45 	bl	80005ee <_write>
 8000d64:	1c43      	adds	r3, r0, #1
 8000d66:	d102      	bne.n	8000d6e <_write_r+0x1e>
 8000d68:	682b      	ldr	r3, [r5, #0]
 8000d6a:	b103      	cbz	r3, 8000d6e <_write_r+0x1e>
 8000d6c:	6023      	str	r3, [r4, #0]
 8000d6e:	bd38      	pop	{r3, r4, r5, pc}
 8000d70:	20000144 	.word	0x20000144

08000d74 <_close_r>:
 8000d74:	b538      	push	{r3, r4, r5, lr}
 8000d76:	4d06      	ldr	r5, [pc, #24]	; (8000d90 <_close_r+0x1c>)
 8000d78:	2300      	movs	r3, #0
 8000d7a:	4604      	mov	r4, r0
 8000d7c:	4608      	mov	r0, r1
 8000d7e:	602b      	str	r3, [r5, #0]
 8000d80:	f7ff fc66 	bl	8000650 <_close>
 8000d84:	1c43      	adds	r3, r0, #1
 8000d86:	d102      	bne.n	8000d8e <_close_r+0x1a>
 8000d88:	682b      	ldr	r3, [r5, #0]
 8000d8a:	b103      	cbz	r3, 8000d8e <_close_r+0x1a>
 8000d8c:	6023      	str	r3, [r4, #0]
 8000d8e:	bd38      	pop	{r3, r4, r5, pc}
 8000d90:	20000144 	.word	0x20000144

08000d94 <__sflush_r>:
 8000d94:	898a      	ldrh	r2, [r1, #12]
 8000d96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d9a:	4605      	mov	r5, r0
 8000d9c:	0710      	lsls	r0, r2, #28
 8000d9e:	460c      	mov	r4, r1
 8000da0:	d458      	bmi.n	8000e54 <__sflush_r+0xc0>
 8000da2:	684b      	ldr	r3, [r1, #4]
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	dc05      	bgt.n	8000db4 <__sflush_r+0x20>
 8000da8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000daa:	2b00      	cmp	r3, #0
 8000dac:	dc02      	bgt.n	8000db4 <__sflush_r+0x20>
 8000dae:	2000      	movs	r0, #0
 8000db0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000db4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000db6:	2e00      	cmp	r6, #0
 8000db8:	d0f9      	beq.n	8000dae <__sflush_r+0x1a>
 8000dba:	2300      	movs	r3, #0
 8000dbc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000dc0:	682f      	ldr	r7, [r5, #0]
 8000dc2:	602b      	str	r3, [r5, #0]
 8000dc4:	d032      	beq.n	8000e2c <__sflush_r+0x98>
 8000dc6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000dc8:	89a3      	ldrh	r3, [r4, #12]
 8000dca:	075a      	lsls	r2, r3, #29
 8000dcc:	d505      	bpl.n	8000dda <__sflush_r+0x46>
 8000dce:	6863      	ldr	r3, [r4, #4]
 8000dd0:	1ac0      	subs	r0, r0, r3
 8000dd2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000dd4:	b10b      	cbz	r3, 8000dda <__sflush_r+0x46>
 8000dd6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000dd8:	1ac0      	subs	r0, r0, r3
 8000dda:	2300      	movs	r3, #0
 8000ddc:	4602      	mov	r2, r0
 8000dde:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000de0:	6a21      	ldr	r1, [r4, #32]
 8000de2:	4628      	mov	r0, r5
 8000de4:	47b0      	blx	r6
 8000de6:	1c43      	adds	r3, r0, #1
 8000de8:	89a3      	ldrh	r3, [r4, #12]
 8000dea:	d106      	bne.n	8000dfa <__sflush_r+0x66>
 8000dec:	6829      	ldr	r1, [r5, #0]
 8000dee:	291d      	cmp	r1, #29
 8000df0:	d82c      	bhi.n	8000e4c <__sflush_r+0xb8>
 8000df2:	4a2a      	ldr	r2, [pc, #168]	; (8000e9c <__sflush_r+0x108>)
 8000df4:	40ca      	lsrs	r2, r1
 8000df6:	07d6      	lsls	r6, r2, #31
 8000df8:	d528      	bpl.n	8000e4c <__sflush_r+0xb8>
 8000dfa:	2200      	movs	r2, #0
 8000dfc:	6062      	str	r2, [r4, #4]
 8000dfe:	04d9      	lsls	r1, r3, #19
 8000e00:	6922      	ldr	r2, [r4, #16]
 8000e02:	6022      	str	r2, [r4, #0]
 8000e04:	d504      	bpl.n	8000e10 <__sflush_r+0x7c>
 8000e06:	1c42      	adds	r2, r0, #1
 8000e08:	d101      	bne.n	8000e0e <__sflush_r+0x7a>
 8000e0a:	682b      	ldr	r3, [r5, #0]
 8000e0c:	b903      	cbnz	r3, 8000e10 <__sflush_r+0x7c>
 8000e0e:	6560      	str	r0, [r4, #84]	; 0x54
 8000e10:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e12:	602f      	str	r7, [r5, #0]
 8000e14:	2900      	cmp	r1, #0
 8000e16:	d0ca      	beq.n	8000dae <__sflush_r+0x1a>
 8000e18:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e1c:	4299      	cmp	r1, r3
 8000e1e:	d002      	beq.n	8000e26 <__sflush_r+0x92>
 8000e20:	4628      	mov	r0, r5
 8000e22:	f000 f897 	bl	8000f54 <_free_r>
 8000e26:	2000      	movs	r0, #0
 8000e28:	6360      	str	r0, [r4, #52]	; 0x34
 8000e2a:	e7c1      	b.n	8000db0 <__sflush_r+0x1c>
 8000e2c:	6a21      	ldr	r1, [r4, #32]
 8000e2e:	2301      	movs	r3, #1
 8000e30:	4628      	mov	r0, r5
 8000e32:	47b0      	blx	r6
 8000e34:	1c41      	adds	r1, r0, #1
 8000e36:	d1c7      	bne.n	8000dc8 <__sflush_r+0x34>
 8000e38:	682b      	ldr	r3, [r5, #0]
 8000e3a:	2b00      	cmp	r3, #0
 8000e3c:	d0c4      	beq.n	8000dc8 <__sflush_r+0x34>
 8000e3e:	2b1d      	cmp	r3, #29
 8000e40:	d001      	beq.n	8000e46 <__sflush_r+0xb2>
 8000e42:	2b16      	cmp	r3, #22
 8000e44:	d101      	bne.n	8000e4a <__sflush_r+0xb6>
 8000e46:	602f      	str	r7, [r5, #0]
 8000e48:	e7b1      	b.n	8000dae <__sflush_r+0x1a>
 8000e4a:	89a3      	ldrh	r3, [r4, #12]
 8000e4c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e50:	81a3      	strh	r3, [r4, #12]
 8000e52:	e7ad      	b.n	8000db0 <__sflush_r+0x1c>
 8000e54:	690f      	ldr	r7, [r1, #16]
 8000e56:	2f00      	cmp	r7, #0
 8000e58:	d0a9      	beq.n	8000dae <__sflush_r+0x1a>
 8000e5a:	0793      	lsls	r3, r2, #30
 8000e5c:	680e      	ldr	r6, [r1, #0]
 8000e5e:	bf08      	it	eq
 8000e60:	694b      	ldreq	r3, [r1, #20]
 8000e62:	600f      	str	r7, [r1, #0]
 8000e64:	bf18      	it	ne
 8000e66:	2300      	movne	r3, #0
 8000e68:	eba6 0807 	sub.w	r8, r6, r7
 8000e6c:	608b      	str	r3, [r1, #8]
 8000e6e:	f1b8 0f00 	cmp.w	r8, #0
 8000e72:	dd9c      	ble.n	8000dae <__sflush_r+0x1a>
 8000e74:	6a21      	ldr	r1, [r4, #32]
 8000e76:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000e78:	4643      	mov	r3, r8
 8000e7a:	463a      	mov	r2, r7
 8000e7c:	4628      	mov	r0, r5
 8000e7e:	47b0      	blx	r6
 8000e80:	2800      	cmp	r0, #0
 8000e82:	dc06      	bgt.n	8000e92 <__sflush_r+0xfe>
 8000e84:	89a3      	ldrh	r3, [r4, #12]
 8000e86:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e8a:	81a3      	strh	r3, [r4, #12]
 8000e8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000e90:	e78e      	b.n	8000db0 <__sflush_r+0x1c>
 8000e92:	4407      	add	r7, r0
 8000e94:	eba8 0800 	sub.w	r8, r8, r0
 8000e98:	e7e9      	b.n	8000e6e <__sflush_r+0xda>
 8000e9a:	bf00      	nop
 8000e9c:	20400001 	.word	0x20400001

08000ea0 <_fflush_r>:
 8000ea0:	b538      	push	{r3, r4, r5, lr}
 8000ea2:	690b      	ldr	r3, [r1, #16]
 8000ea4:	4605      	mov	r5, r0
 8000ea6:	460c      	mov	r4, r1
 8000ea8:	b913      	cbnz	r3, 8000eb0 <_fflush_r+0x10>
 8000eaa:	2500      	movs	r5, #0
 8000eac:	4628      	mov	r0, r5
 8000eae:	bd38      	pop	{r3, r4, r5, pc}
 8000eb0:	b118      	cbz	r0, 8000eba <_fflush_r+0x1a>
 8000eb2:	6983      	ldr	r3, [r0, #24]
 8000eb4:	b90b      	cbnz	r3, 8000eba <_fflush_r+0x1a>
 8000eb6:	f7ff fdc3 	bl	8000a40 <__sinit>
 8000eba:	4b14      	ldr	r3, [pc, #80]	; (8000f0c <_fflush_r+0x6c>)
 8000ebc:	429c      	cmp	r4, r3
 8000ebe:	d11b      	bne.n	8000ef8 <_fflush_r+0x58>
 8000ec0:	686c      	ldr	r4, [r5, #4]
 8000ec2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	d0ef      	beq.n	8000eaa <_fflush_r+0xa>
 8000eca:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000ecc:	07d0      	lsls	r0, r2, #31
 8000ece:	d404      	bmi.n	8000eda <_fflush_r+0x3a>
 8000ed0:	0599      	lsls	r1, r3, #22
 8000ed2:	d402      	bmi.n	8000eda <_fflush_r+0x3a>
 8000ed4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000ed6:	f7ff fe51 	bl	8000b7c <__retarget_lock_acquire_recursive>
 8000eda:	4628      	mov	r0, r5
 8000edc:	4621      	mov	r1, r4
 8000ede:	f7ff ff59 	bl	8000d94 <__sflush_r>
 8000ee2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000ee4:	07da      	lsls	r2, r3, #31
 8000ee6:	4605      	mov	r5, r0
 8000ee8:	d4e0      	bmi.n	8000eac <_fflush_r+0xc>
 8000eea:	89a3      	ldrh	r3, [r4, #12]
 8000eec:	059b      	lsls	r3, r3, #22
 8000eee:	d4dd      	bmi.n	8000eac <_fflush_r+0xc>
 8000ef0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000ef2:	f7ff fe44 	bl	8000b7e <__retarget_lock_release_recursive>
 8000ef6:	e7d9      	b.n	8000eac <_fflush_r+0xc>
 8000ef8:	4b05      	ldr	r3, [pc, #20]	; (8000f10 <_fflush_r+0x70>)
 8000efa:	429c      	cmp	r4, r3
 8000efc:	d101      	bne.n	8000f02 <_fflush_r+0x62>
 8000efe:	68ac      	ldr	r4, [r5, #8]
 8000f00:	e7df      	b.n	8000ec2 <_fflush_r+0x22>
 8000f02:	4b04      	ldr	r3, [pc, #16]	; (8000f14 <_fflush_r+0x74>)
 8000f04:	429c      	cmp	r4, r3
 8000f06:	bf08      	it	eq
 8000f08:	68ec      	ldreq	r4, [r5, #12]
 8000f0a:	e7da      	b.n	8000ec2 <_fflush_r+0x22>
 8000f0c:	08001068 	.word	0x08001068
 8000f10:	08001088 	.word	0x08001088
 8000f14:	08001048 	.word	0x08001048

08000f18 <_lseek_r>:
 8000f18:	b538      	push	{r3, r4, r5, lr}
 8000f1a:	4d07      	ldr	r5, [pc, #28]	; (8000f38 <_lseek_r+0x20>)
 8000f1c:	4604      	mov	r4, r0
 8000f1e:	4608      	mov	r0, r1
 8000f20:	4611      	mov	r1, r2
 8000f22:	2200      	movs	r2, #0
 8000f24:	602a      	str	r2, [r5, #0]
 8000f26:	461a      	mov	r2, r3
 8000f28:	f7ff fb4f 	bl	80005ca <_lseek>
 8000f2c:	1c43      	adds	r3, r0, #1
 8000f2e:	d102      	bne.n	8000f36 <_lseek_r+0x1e>
 8000f30:	682b      	ldr	r3, [r5, #0]
 8000f32:	b103      	cbz	r3, 8000f36 <_lseek_r+0x1e>
 8000f34:	6023      	str	r3, [r4, #0]
 8000f36:	bd38      	pop	{r3, r4, r5, pc}
 8000f38:	20000144 	.word	0x20000144

08000f3c <__malloc_lock>:
 8000f3c:	4801      	ldr	r0, [pc, #4]	; (8000f44 <__malloc_lock+0x8>)
 8000f3e:	f7ff be1d 	b.w	8000b7c <__retarget_lock_acquire_recursive>
 8000f42:	bf00      	nop
 8000f44:	20000138 	.word	0x20000138

08000f48 <__malloc_unlock>:
 8000f48:	4801      	ldr	r0, [pc, #4]	; (8000f50 <__malloc_unlock+0x8>)
 8000f4a:	f7ff be18 	b.w	8000b7e <__retarget_lock_release_recursive>
 8000f4e:	bf00      	nop
 8000f50:	20000138 	.word	0x20000138

08000f54 <_free_r>:
 8000f54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000f56:	2900      	cmp	r1, #0
 8000f58:	d044      	beq.n	8000fe4 <_free_r+0x90>
 8000f5a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f5e:	9001      	str	r0, [sp, #4]
 8000f60:	2b00      	cmp	r3, #0
 8000f62:	f1a1 0404 	sub.w	r4, r1, #4
 8000f66:	bfb8      	it	lt
 8000f68:	18e4      	addlt	r4, r4, r3
 8000f6a:	f7ff ffe7 	bl	8000f3c <__malloc_lock>
 8000f6e:	4a1e      	ldr	r2, [pc, #120]	; (8000fe8 <_free_r+0x94>)
 8000f70:	9801      	ldr	r0, [sp, #4]
 8000f72:	6813      	ldr	r3, [r2, #0]
 8000f74:	b933      	cbnz	r3, 8000f84 <_free_r+0x30>
 8000f76:	6063      	str	r3, [r4, #4]
 8000f78:	6014      	str	r4, [r2, #0]
 8000f7a:	b003      	add	sp, #12
 8000f7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000f80:	f7ff bfe2 	b.w	8000f48 <__malloc_unlock>
 8000f84:	42a3      	cmp	r3, r4
 8000f86:	d908      	bls.n	8000f9a <_free_r+0x46>
 8000f88:	6825      	ldr	r5, [r4, #0]
 8000f8a:	1961      	adds	r1, r4, r5
 8000f8c:	428b      	cmp	r3, r1
 8000f8e:	bf01      	itttt	eq
 8000f90:	6819      	ldreq	r1, [r3, #0]
 8000f92:	685b      	ldreq	r3, [r3, #4]
 8000f94:	1949      	addeq	r1, r1, r5
 8000f96:	6021      	streq	r1, [r4, #0]
 8000f98:	e7ed      	b.n	8000f76 <_free_r+0x22>
 8000f9a:	461a      	mov	r2, r3
 8000f9c:	685b      	ldr	r3, [r3, #4]
 8000f9e:	b10b      	cbz	r3, 8000fa4 <_free_r+0x50>
 8000fa0:	42a3      	cmp	r3, r4
 8000fa2:	d9fa      	bls.n	8000f9a <_free_r+0x46>
 8000fa4:	6811      	ldr	r1, [r2, #0]
 8000fa6:	1855      	adds	r5, r2, r1
 8000fa8:	42a5      	cmp	r5, r4
 8000faa:	d10b      	bne.n	8000fc4 <_free_r+0x70>
 8000fac:	6824      	ldr	r4, [r4, #0]
 8000fae:	4421      	add	r1, r4
 8000fb0:	1854      	adds	r4, r2, r1
 8000fb2:	42a3      	cmp	r3, r4
 8000fb4:	6011      	str	r1, [r2, #0]
 8000fb6:	d1e0      	bne.n	8000f7a <_free_r+0x26>
 8000fb8:	681c      	ldr	r4, [r3, #0]
 8000fba:	685b      	ldr	r3, [r3, #4]
 8000fbc:	6053      	str	r3, [r2, #4]
 8000fbe:	4421      	add	r1, r4
 8000fc0:	6011      	str	r1, [r2, #0]
 8000fc2:	e7da      	b.n	8000f7a <_free_r+0x26>
 8000fc4:	d902      	bls.n	8000fcc <_free_r+0x78>
 8000fc6:	230c      	movs	r3, #12
 8000fc8:	6003      	str	r3, [r0, #0]
 8000fca:	e7d6      	b.n	8000f7a <_free_r+0x26>
 8000fcc:	6825      	ldr	r5, [r4, #0]
 8000fce:	1961      	adds	r1, r4, r5
 8000fd0:	428b      	cmp	r3, r1
 8000fd2:	bf04      	itt	eq
 8000fd4:	6819      	ldreq	r1, [r3, #0]
 8000fd6:	685b      	ldreq	r3, [r3, #4]
 8000fd8:	6063      	str	r3, [r4, #4]
 8000fda:	bf04      	itt	eq
 8000fdc:	1949      	addeq	r1, r1, r5
 8000fde:	6021      	streq	r1, [r4, #0]
 8000fe0:	6054      	str	r4, [r2, #4]
 8000fe2:	e7ca      	b.n	8000f7a <_free_r+0x26>
 8000fe4:	b003      	add	sp, #12
 8000fe6:	bd30      	pop	{r4, r5, pc}
 8000fe8:	2000013c 	.word	0x2000013c

08000fec <_read_r>:
 8000fec:	b538      	push	{r3, r4, r5, lr}
 8000fee:	4d07      	ldr	r5, [pc, #28]	; (800100c <_read_r+0x20>)
 8000ff0:	4604      	mov	r4, r0
 8000ff2:	4608      	mov	r0, r1
 8000ff4:	4611      	mov	r1, r2
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	602a      	str	r2, [r5, #0]
 8000ffa:	461a      	mov	r2, r3
 8000ffc:	f7ff fa8d 	bl	800051a <_read>
 8001000:	1c43      	adds	r3, r0, #1
 8001002:	d102      	bne.n	800100a <_read_r+0x1e>
 8001004:	682b      	ldr	r3, [r5, #0]
 8001006:	b103      	cbz	r3, 800100a <_read_r+0x1e>
 8001008:	6023      	str	r3, [r4, #0]
 800100a:	bd38      	pop	{r3, r4, r5, pc}
 800100c:	20000144 	.word	0x20000144

08001010 <_init>:
 8001010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001012:	bf00      	nop
 8001014:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001016:	bc08      	pop	{r3}
 8001018:	469e      	mov	lr, r3
 800101a:	4770      	bx	lr

0800101c <_fini>:
 800101c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800101e:	bf00      	nop
 8001020:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001022:	bc08      	pop	{r3}
 8001024:	469e      	mov	lr, r3
 8001026:	4770      	bx	lr
